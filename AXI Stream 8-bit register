`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 21.06.2024 22:39:47
// Design Name: 
// Module Name: AXI_register
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module axi_stream_register (
    input wire clk,
    input wire rst_n, // asynchronous active low reset
    
    // Input AXI Stream interface
    input wire [7:0] s_axis_tdata,
    input wire s_axis_tvalid,
    input wire s_axis_tlast,
    output wire s_axis_tready,
    
    // Output AXI Stream interface
    output reg [7:0] m_axis_tdata,
    output reg m_axis_tvalid,
    output reg m_axis_tlast,
    input wire m_axis_tready
);

    reg [7:0] reg_data;
    reg reg_valid;
    reg reg_last;

    // Input interface logic
    assign s_axis_tready = !reg_valid || (m_axis_tready && m_axis_tvalid);

    // Register logic
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            reg_data <= 8'b0;
            reg_valid <= 1'b0;
            reg_last <= 1'b0;
        end else if (s_axis_tvalid && s_axis_tready) begin
            reg_data <= s_axis_tdata;
            reg_valid <= 1'b1;
            reg_last <= s_axis_tlast;
        end else if (m_axis_tready && m_axis_tvalid) begin
            reg_valid <= 1'b0;
        end
    end

    // Output interface logic
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            m_axis_tdata <= 8'b0;
            m_axis_tvalid <= 1'b0;
            m_axis_tlast <= 1'b0;
        end else begin
            m_axis_tdata <= reg_data;
            m_axis_tvalid <= reg_valid;
            m_axis_tlast <= reg_last;
        end
    end

endmodule
